import os
import sys

# Options
debug_mode = False
boost_gil_io_png_support = True

cwd = os.getcwd()

# Environment
main_env = Environment()

# Compile flags
main_env.Append(CXXFLAGS=[
    "-g",
    "-Wall",
    "-Wextra",
    "-Werror",
    "-w",
    "-Wl,-rpath,\$$ORIGIN",
    "-std=c++17",
    "-lpthread"
])

if debug_mode :
    main_env.Append(CXXFLAGS=[
        "-g",
        "-O0"
    ])
else :
    main_env.Append(CXXFLAGS=[
        "-s",
        "-O0",
        "-DNDEBUG"
    ])

# Thirdpart
home_path = os.path.expanduser( '~' )
include_path = home_path + '/code/3rdparty/include'
library_path = home_path + '/code/3rdparty/library'

## boost
boost_include_path = include_path + '/boost'
boost_library_path = library_path + '/boost'

## eigen
eigen_include_path = include_path + '/eigen'

## png
png_include_path = include_path + '/png'
png_library_path = library_path + '/png'

# Include dirs
include_path = [
    cwd,
    cwd + '/..',
    include_path,
    boost_include_path,
    eigen_include_path,
    png_include_path,
]

# Library dirs
libs_path =[
    boost_library_path,
]

if boost_gil_io_png_support :
    include_path.append(png_include_path)
    libs_path.append(png_library_path)
    
main_env.Append(CPPPATH=include_path)
main_env.Append(LIBPATH=libs_path)

# Build dir
build_path = os.path.abspath(cwd + '/build')
main_env.Append(BUILDPATH=build_path)

# SCONS scripts to build
build_scripts = [
    'test/SConscript',
]

for script in build_scripts:
    env = main_env.Clone()
    env.Append(CURRENTDIR=os.path.dirname(cwd + '/' + script))
    SConscript(script, exports='env', variant_dir=build_path)

test_cpp = cwd + '/test.cpp'
if os.path.exists(test_cpp) :
    rpath = libs_path
    libs_name = ['pthread']
    program_name = build_path + "/test.exe"
    main_env.Program(program_name,test_cpp,LIBS=libs_name,LIBPATH=libs_path,RPATH=rpath, )